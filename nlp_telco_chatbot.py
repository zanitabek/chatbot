# -*- coding: utf-8 -*-
"""NLP Telco Chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TtZZEIFZk5xTHYtwXrehcgg3X9SlKsAB
"""

# =====================================
#  Telco Chatbot(TeleBot)
# =====================================

# ✅ Step 1: Import Required Libraries

import numpy as np
import nltk ## Natuar Language Toolkit
import string
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# ✅ Step 2: Download NLTK Resources

nltk.download('punkt') ## tokenizer model
nltk.download('punkt_tab')

nltk.download('wordnet') ## dictionary of words with meanings and word relationships used by lemmatizers to reduce words to their base form.

# ✅ Step 3: Add Telecom Knowledge Base (Corpus)
telco_corpus = """
Welcome to TeleBot. You can check your airtime balance by dialing *124#.
To buy a data bundle, dial *700# and follow the prompt.
For customer care, call 110 or visit our nearest retail shop.
Night bundles are available from 12am to 5am.
Dial *700# to subscribe to a voice package.
Use the Telecel Play App to do cash transfers for free.
What bundles do you have? We offer daily, hourly, weekly, and monthly bundles. Dial *700# to view them.
For personalized offers dial *530#
Where are your service centers? We have centers worldwide, share your location and i'll provide the nearest retail shop.
"""

# ✅ Step 4: Preprocess the Text
from nltk.stem import WordNetLemmatizer ## importing the lemmatizer

sent_tokens = nltk.sent_tokenize(telco_corpus.lower())  # split the corpus into separate sentences using the punctuations and changes to lowercase

word_tokens = nltk.word_tokenize(telco_corpus.lower())  # breaking the corpus into word tokens( individual words)

# ✅ Step 5: Greeting Function
GREETING_INPUTS = ["hello", "hi", "greetings", "hey", "what's up"]
GREETING_RESPONSES = ["Hi there!", "Hello!", "Hey!", "Welcome to TeleNet!"]

def greeting(sentence):
    for word in sentence.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)

# ✅ Step 6: Response Generator Function
def generate_response(user_input):
    user_input = user_input.lower()
    sent_tokens.append(user_input)

    vectorizer = TfidfVectorizer()
    tfidf = vectorizer.fit_transform(sent_tokens)
    similarity = cosine_similarity(tfidf[-1], tfidf)

    index = similarity.argsort()[0][-2]
    flat = similarity.flatten()
    flat.sort()
    score = flat[-2]

    sent_tokens.pop()

    if score == 0:
        return "Sorry, I didn't understand that. Try again."
    else:
        return sent_tokens[index]

## Step 7: Start Chatbot Interaction

user_input = input("You: ").strip()

if user_input:
    if greeting(user_input):
        print("TeleBot:", greeting(user_input))
    else:
        print("TeleBot:", generate_response(user_input))
else:
    print("TeleBot: Let me know when you're ready with a question!")